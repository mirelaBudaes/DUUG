@using MindBus.Extensions.Extensions
@{
    dynamic eventRoot = GlobalFunctions.GetFirstNode(Model, "Events");

    if (eventRoot == null)
    {
        return;
    }

    string[] types;

    if (string.IsNullOrWhiteSpace(Model.GetPropertyValue("typeOfEvents")))
    {
        types = new string[] { };
    }
    else
    {
        types = Model.TypeOfEvents.Split(',');
    }

    var typeConditions = types.Select(type => "NodeTypeAlias == \"" + type + "\"").ToArray();

    var typeCondition = string.Join(" or ", typeConditions);

    var events = eventRoot.Children.Where("Template!=0").Where("Visible");
    if(!string.IsNullOrWhiteSpace(typeCondition))
    {
        events = events.Where(typeCondition);
    }

    events = events.Where("EndingTime >= DateTime.Now").OrderBy("StartingTime");

    if (!events.Any())
    {
    <div class="emptyList">
        @Model.EmptyMessage
    </div>
    }
    else
    {
        int currentPage = 0;

        if (!string.IsNullOrWhiteSpace(Request.QueryString["page"]))
        {
            int.TryParse(Request.QueryString["page"], out currentPage);
        }

        string itemsShownProperty = Model.Name == "Home" ? "eventsShown" : "itemsShown";

        int totalCount, pageSize;

        events = GlobalFunctions.GetList(Model, events, itemsShownProperty, currentPage, out pageSize, out totalCount);

        foreach (var item in events)
        {
    @RenderEvent(item)
        }

    @Pager.Render(Model, pageSize, currentPage, totalCount)
    }
}
@helper RenderEvent(dynamic item)
    {
        var startingTime = item.StartingTime;

        var extraCssClass = item.NodeTypeAlias == "DuugDrink" ? "bier" : string.Empty;
        
    <a href="@item.Url" class="eventblock">
        <img src="/static/img/event.jpg" />
        <div class="date">
            <span>@(((DateTime)startingTime).FormatDay())</span>@(((DateTime)startingTime).FormatMonth())</div>
        <div class="details">
            <span class="time">@(((DateTime)startingTime).FormatDateAndTime())</span><span class="location">@item.Location
                - @item.LocationCity</span></div>
        <div class="title @extraCssClass">@item.GetTitle()</div>
    </a>
}
